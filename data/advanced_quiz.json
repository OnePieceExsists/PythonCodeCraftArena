{
  "title": "Advanced Quiz",
  "type": "quiz",
  "quiz": [
    {
      "question": "What is the output of the following code?",
      "code": "x = [1, 2, 3]\ny = (i**2 for i in x)\nprint(list(y))",
      "options": ["[1, 4, 9]", "[1, 2, 3]", "[1, 4]", "None"],
      "answer": [0],
      "explanation": "The generator expression produces squares, and list() collects them: [1, 4, 9].",
      "type": "singleSelect"
    },
    {
      "question": "What is the output of the following code?",
      "code": "def func(a, b=[]):\n    b.append(a)\n    return b\n\nprint(func(1))\nprint(func(2))",
      "options": ["[1], [2]", "[1], [1, 2]", "[2], [1, 2]", "Error"],
      "answer": [1],
      "explanation": "The default list b retains its value across calls, so values accumulate.",
      "type": "singleSelect"
    },
    {
      "question": "What is the time complexity of searching for an element in a balanced binary search tree?",
      "code": "",
      "options": ["O(1)", "O(log n)", "O(n)", "O(n^2)"],
      "answer": [1],
      "explanation": "Balanced BSTs have height log(n), so search is O(log n).",
      "type": "singleSelect"
    },
    {
      "question": "What is the output of this code?",
      "code": "x = [1, 2, 3]\ny = x[:]\ny[0] = 0\nprint(x)",
      "options": ["[0, 2, 3]", "[1, 2, 3]", "[0, 0, 0]", "None"],
      "answer": [1],
      "explanation": "x[:] creates a copy. x remains unchanged: [1, 2, 3].",
      "type": "singleSelect"
    },
    {
      "question": "What is the output of this code?",
      "code": "x = {'a': 1, 'b': 2}\ny = x\nx['c'] = 3\nprint(y)",
      "options": ["{'a': 1, 'b': 2}", "{'a': 1, 'b': 2, 'c': 3}", "{}", "None"],
      "answer": [1],
      "explanation": "Dictionaries are mutable, and y is a reference to x.",
      "type": "singleSelect"
    },
    {
      "question": "What does the following list comprehension output?",
      "code": "x = [1, 2, 3]\n[i for i in x if i % 2 == 0]",
      "options": ["[1, 2, 3]", "[2]", "[1, 3]", "None"],
      "answer": [1],
      "explanation": "Only even elements are kept, so result is [2].",
      "type": "singleSelect"
    },
    {
      "question": "Which statement about Python's Global Interpreter Lock (GIL) is FALSE?",
      "code": "",
      "options": [
        "It prevents multiple native threads from executing Python bytecode simultaneously.",
        "It simplifies memory management in CPython.",
        "It allows true parallelism in multi-threaded Python programs.",
        "It can be a bottleneck in CPU-bound multi-threaded programs."
      ],
      "answer": [2],
      "explanation": "The GIL blocks true parallelism in threads; only one runs at a time.",
      "type": "singleSelect"
    },
    {
      "question": "What is the output of this code?",
      "code": "x = [1, 2, 3]\ny = map(lambda i: i * 2, x)\nprint(list(y))",
      "options": ["[1, 2, 3]", "[2, 4, 6]", "[1, 4, 9]", "None"],
      "answer": [1],
      "explanation": "Each value in x is doubled using map, resulting in [2, 4, 6].",
      "type": "singleSelect"
    },
    {
      "question": "What is the output?",
      "code": "x = (i for i in range(3))\nprint(next(x))\nprint(next(x))",
      "options": ["0, 1", "1, 2", "0, 2", "Error"],
      "answer": [0],
      "explanation": "The generator yields 0, 1, 2. next() returns 0, then 1.",
      "type": "singleSelect"
    },
    {
      "question": "What does zip(x, x) return?",
      "code": "x = [1, 2, 3]\nprint(list(zip(x, x)))",
      "options": ["[(1, 1), (2, 2), (3, 3)]", "[(1, 2), (2, 3)]", "[(1, 1), (2, 2)]", "None"],
      "answer": [0],
      "explanation": "Each element is zipped with itself, creating identical pairs.",
      "type": "singleSelect"
    },
    {
      "question": "What is the result of this expression?",
      "code": "x = [1, 2, 3]\nall(i > 0 for i in x)",
      "options": ["True", "False", "None", "Error"],
      "answer": [0],
      "explanation": "All elements are > 0, so the result is True.",
      "type": "singleSelect"
    },
    {
      "question": "What is the result of this expression?",
      "code": "x = [1, 2, 3]\nany(i > 2 for i in x)",
      "options": ["True", "False", "None", "Error"],
      "answer": [0],
      "explanation": "Since 3 > 2, any() returns True.",
      "type": "singleSelect"
    },
    {
      "question": "What is the result of this call?",
      "code": "x = [1, 2, 3]\nsorted(x, reverse=True)",
      "options": ["[1, 2, 3]", "[3, 2, 1]", "[2, 3, 1]", "None"],
      "answer": [1],
      "explanation": "sorted() with reverse=True orders it from largest to smallest.",
      "type": "singleSelect"
    },
    {
      "question": "What is the output?",
      "code": "x = [1, 2, 3]\nlist(reversed(x))",
      "options": ["[1, 2, 3]", "[3, 2, 1]", "[2, 3, 1]", "None"],
      "answer": [1],
      "explanation": "reversed() yields items backward, and list() collects them.",
      "type": "singleSelect"
    },
    {
      "question": "What is the result of multiplying a list?",
      "code": "x = [1, 2, 3]\nx * 2",
      "options": ["[1, 2, 3, 1, 2, 3]", "[2, 4, 6]", "[1, 2, 3]", "None"],
      "answer": [0],
      "explanation": "Multiplying a list repeats it. The result is [1, 2, 3, 1, 2, 3].",
      "type": "singleSelect"
    }
  ]
}
